{"ast":null,"code":"var _jsxFileName = \"/Users/minjeongyeom/Projects/project-wildet/wildet/src/components/WebcamVideo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport Webcam from \"react-webcam\";\nimport axios from \"axios\";\nimport Analysising from \"./Analysising\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WebcamVideo() {\n  _s();\n  const webcamRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const [recording, setRecording] = useState(false);\n  const [videoUrl, setVideoUrl] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const handleStartRecording = () => {\n    setRecording(true);\n    mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream);\n    mediaRecorderRef.current.addEventListener(\"dataavailable\", handleDataAvailable);\n    mediaRecorderRef.current.start();\n  };\n  const handleDataAvailable = event => {\n    if (event.data.size > 0) {\n      const videoBlob = new Blob([event.data], {\n        type: \"video/mp4\"\n      });\n      const formData = new FormData();\n      formData.append(\"file\", videoBlob);\n      setIsLoading(true);\n      axios.post(\"http://localhost:5000/detect\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        withCredentials: true,\n        responseType: \"blob\" // blob 유형으로 응답 받음\n      }).then(response => {\n        console.log(\"성공\");\n        const videoBlob = new Blob([response.data], {\n          type: \"video/mp4\"\n        });\n        setIsLoading(false);\n        const videoUrl1 = URL.createObjectURL(videoBlob); // URL 객체로 변환\n        setVideoUrl(videoUrl1);\n\n        // const a = document.createElement(\"a\");\n        // a.href = videoUrl1;\n        // const videoName = `video_${new Date().getTime()}.mp4`;\n        // a.download = videoName;\n        // a.click();\n      });\n    }\n  };\n\n  console.log(videoUrl);\n  const handleStopRecording = () => {\n    mediaRecorderRef.current.stop();\n  };\n  const videoConstraints = {\n    width: 420,\n    height: 420,\n    facingMode: \"user\"\n  };\n\n  // const handleVideoLoaded = (event) => {\n  //   event.target.play();\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"white\"\n      },\n      children: \"\\uAC1D\\uCCB4 \\uC778\\uC2DD \\uC911\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [videoUrl ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const a = document.createElement(\"a\");\n          a.href = videoUrl;\n          const videoName = `video_${new Date().getTime()}.mp4`;\n          a.download = videoName;\n          a.click();\n        },\n        children: \"\\uB2E4\\uC6B4\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Webcam, {\n        height: 400,\n        width: 400,\n        audio: false,\n        mirrored: true,\n        ref: webcamRef,\n        videoConstraints: videoConstraints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), recording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStopRecording,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartRecording,\n        children: \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(WebcamVideo, \"+HVc4oZXlNEgxeZlpxFE15jskyY=\");\n_c = WebcamVideo;\nvar _c;\n$RefreshReg$(_c, \"WebcamVideo\");","map":{"version":3,"names":["React","useState","useRef","Webcam","axios","Analysising","jsxDEV","_jsxDEV","Fragment","_Fragment","WebcamVideo","_s","webcamRef","mediaRecorderRef","recording","setRecording","videoUrl","setVideoUrl","isLoading","setIsLoading","handleStartRecording","current","MediaRecorder","stream","addEventListener","handleDataAvailable","start","event","data","size","videoBlob","Blob","type","formData","FormData","append","post","headers","withCredentials","responseType","then","response","console","log","videoUrl1","URL","createObjectURL","handleStopRecording","stop","videoConstraints","width","height","facingMode","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","a","document","createElement","href","videoName","Date","getTime","download","click","audio","mirrored","ref","_c","$RefreshReg$"],"sources":["/Users/minjeongyeom/Projects/project-wildet/wildet/src/components/WebcamVideo.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Webcam from \"react-webcam\";\nimport axios from \"axios\";\nimport Analysising from \"./Analysising\";\n\nexport default function WebcamVideo() {\n  const webcamRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const [recording, setRecording] = useState(false);\n  const [videoUrl, setVideoUrl] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleStartRecording = () => {\n    setRecording(true);\n    mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream);\n    mediaRecorderRef.current.addEventListener(\n      \"dataavailable\",\n      handleDataAvailable\n    );\n    mediaRecorderRef.current.start();\n  };\n\n  const handleDataAvailable = (event) => {\n    if (event.data.size > 0) {\n      const videoBlob = new Blob([event.data], { type: \"video/mp4\" });\n      const formData = new FormData();\n      formData.append(\"file\", videoBlob);\n      setIsLoading(true);\n      axios\n        .post(\"http://localhost:5000/detect\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n          withCredentials: true,\n          responseType: \"blob\", // blob 유형으로 응답 받음\n        })\n        .then((response) => {\n          console.log(\"성공\");\n\n          const videoBlob = new Blob([response.data], {\n            type: \"video/mp4\",\n          });\n\n          setIsLoading(false);\n\n          const videoUrl1 = URL.createObjectURL(videoBlob); // URL 객체로 변환\n          setVideoUrl(videoUrl1);\n\n          // const a = document.createElement(\"a\");\n          // a.href = videoUrl1;\n          // const videoName = `video_${new Date().getTime()}.mp4`;\n          // a.download = videoName;\n          // a.click();\n        });\n    }\n  };\n\n  console.log(videoUrl);\n\n  const handleStopRecording = () => {\n    mediaRecorderRef.current.stop();\n  };\n\n  const videoConstraints = {\n    width: 420,\n    height: 420,\n    facingMode: \"user\",\n  };\n\n  // const handleVideoLoaded = (event) => {\n  //   event.target.play();\n  // };\n\n  return (\n    <div className=\"Container\">\n      {isLoading ? (\n        <div\n          style={{\n            color: \"white\",\n          }}\n        >\n          객체 인식 중\n        </div>\n      ) : (\n        <>\n          {videoUrl ? (\n            <button\n              onClick={() => {\n                const a = document.createElement(\"a\");\n                a.href = videoUrl;\n                const videoName = `video_${new Date().getTime()}.mp4`;\n                a.download = videoName;\n                a.click();\n              }}\n            >\n              다운로드\n            </button>\n          ) : (\n            <Webcam\n              height={400}\n              width={400}\n              audio={false}\n              mirrored={true}\n              ref={webcamRef}\n              videoConstraints={videoConstraints}\n            />\n          )}\n          {recording ? (\n            <button onClick={handleStopRecording}>Stop Recording</button>\n          ) : (\n            <button onClick={handleStartRecording}>Start Recording</button>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}