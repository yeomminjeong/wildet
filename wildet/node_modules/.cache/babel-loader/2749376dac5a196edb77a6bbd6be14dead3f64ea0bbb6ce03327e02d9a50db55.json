{"ast":null,"code":"import _regeneratorRuntime from \"/Users/minjeongyeom/Projects/project-wildet/wildet/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/minjeongyeom/Projects/project-wildet/wildet/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/minjeongyeom/Projects/project-wildet/wildet/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/minjeongyeom/Projects/project-wildet/wildet/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/minjeongyeom/Projects/project-wildet/wildet/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/minjeongyeom/Projects/project-wildet/wildet/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network-only](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#network-only)\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins](https://developer.chrome.com/docs/workbox/using-plugins/).\n *\n * If the network request fails, this will throw a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nvar NetworkOnly = /*#__PURE__*/function (_Strategy) {\n  _inherits(NetworkOnly, _Strategy);\n  var _super = _createSuper(NetworkOnly);\n  /**\n   * @param {Object} [options]\n   * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n   * to use in conjunction with this caching strategy.\n   * @param {Object} [options.fetchOptions] Values passed along to the\n   * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n   * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n   * `fetch()` requests made by this strategy.\n   * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n   * that fail to respond within the timeout will result in a network error.\n   */\n  function NetworkOnly() {\n    var _this;\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, NetworkOnly);\n    _this = _super.call(this, options);\n    _this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n    return _this;\n  }\n  /**\n   * @private\n   * @param {Request|string} request A request to run this strategy for.\n   * @param {workbox-strategies.StrategyHandler} handler The event that\n   *     triggered the request.\n   * @return {Promise<Response>}\n   */\n  _createClass(NetworkOnly, [{\n    key: \"_handle\",\n    value: function () {\n      var _handle2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(request, handler) {\n        var error, response, promises, timeoutPromise;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (process.env.NODE_ENV !== 'production') {\n                assert.isInstance(request, Request, {\n                  moduleName: 'workbox-strategies',\n                  className: this.constructor.name,\n                  funcName: '_handle',\n                  paramName: 'request'\n                });\n              }\n              error = undefined;\n              _context.prev = 2;\n              promises = [handler.fetch(request)];\n              if (this._networkTimeoutSeconds) {\n                timeoutPromise = timeout(this._networkTimeoutSeconds * 1000);\n                promises.push(timeoutPromise);\n              }\n              _context.next = 7;\n              return Promise.race(promises);\n            case 7:\n              response = _context.sent;\n              if (response) {\n                _context.next = 10;\n                break;\n              }\n              throw new Error(\"Timed out the network response after \" + \"\".concat(this._networkTimeoutSeconds, \" seconds.\"));\n            case 10:\n              _context.next = 15;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              if (_context.t0 instanceof Error) {\n                error = _context.t0;\n              }\n            case 15:\n              if (process.env.NODE_ENV !== 'production') {\n                logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n                if (response) {\n                  logger.log(\"Got response from network.\");\n                } else {\n                  logger.log(\"Unable to get a response from the network.\");\n                }\n                messages.printFinalResponse(response);\n                logger.groupEnd();\n              }\n              if (response) {\n                _context.next = 18;\n                break;\n              }\n              throw new WorkboxError('no-response', {\n                url: request.url,\n                error: error\n              });\n            case 18:\n              return _context.abrupt(\"return\", response);\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[2, 12]]);\n      }));\n      function _handle(_x, _x2) {\n        return _handle2.apply(this, arguments);\n      }\n      return _handle;\n    }()\n  }]);\n  return NetworkOnly;\n}(Strategy);\nexport { NetworkOnly };","map":{"version":3,"names":["assert","logger","timeout","WorkboxError","Strategy","messages","NetworkOnly","_Strategy","_inherits","_super","_createSuper","_this","options","arguments","length","undefined","_classCallCheck","call","_networkTimeoutSeconds","networkTimeoutSeconds","_createClass","key","value","_handle2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","handler","error","response","promises","timeoutPromise","wrap","_callee$","_context","prev","next","process","env","NODE_ENV","isInstance","Request","moduleName","className","constructor","name","funcName","paramName","fetch","push","Promise","race","sent","Error","concat","t0","groupCollapsed","strategyStart","log","printFinalResponse","groupEnd","url","abrupt","stop","_handle","_x","_x2","apply"],"sources":["/Users/minjeongyeom/Projects/project-wildet/wildet/node_modules/workbox-strategies/NetworkOnly.js"],"sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network-only](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#network-only)\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins](https://developer.chrome.com/docs/workbox/using-plugins/).\n *\n * If the network request fails, this will throw a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass NetworkOnly extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will result in a network error.\n     */\n    constructor(options = {}) {\n        super(options);\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: '_handle',\n                paramName: 'request',\n            });\n        }\n        let error = undefined;\n        let response;\n        try {\n            const promises = [\n                handler.fetch(request),\n            ];\n            if (this._networkTimeoutSeconds) {\n                const timeoutPromise = timeout(this._networkTimeoutSeconds * 1000);\n                promises.push(timeoutPromise);\n            }\n            response = await Promise.race(promises);\n            if (!response) {\n                throw new Error(`Timed out the network response after ` +\n                    `${this._networkTimeoutSeconds} seconds.`);\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                error = err;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            if (response) {\n                logger.log(`Got response from network.`);\n            }\n            else {\n                logger.log(`Unable to get a response from the network.`);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { NetworkOnly };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}