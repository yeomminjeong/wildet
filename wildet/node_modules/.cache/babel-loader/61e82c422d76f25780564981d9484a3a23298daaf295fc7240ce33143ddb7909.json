{"ast":null,"code":"import _regeneratorRuntime from \"/Users/minjeongyeom/Projects/project-wildet/wildet/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/minjeongyeom/Projects/project-wildet/wildet/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createClass from \"/Users/minjeongyeom/Projects/project-wildet/wildet/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/minjeongyeom/Projects/project-wildet/wildet/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nvar PrecacheCacheKeyPlugin = /*#__PURE__*/_createClass(function PrecacheCacheKeyPlugin(_ref) {\n  var _this = this;\n  var precacheController = _ref.precacheController;\n  _classCallCheck(this, PrecacheCacheKeyPlugin);\n  this.cacheKeyWillBeUsed = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref2) {\n      var request, params, cacheKey;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            request = _ref2.request, params = _ref2.params;\n            // Params is type any, can't change right now.\n            /* eslint-disable */\n            cacheKey = (params === null || params === void 0 ? void 0 : params.cacheKey) || _this._precacheController.getCacheKeyForURL(request.url);\n            /* eslint-enable */\n            return _context.abrupt(\"return\", cacheKey ? new Request(cacheKey, {\n              headers: request.headers\n            }) : request);\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  this._precacheController = precacheController;\n});\nexport { PrecacheCacheKeyPlugin };","map":{"version":3,"names":["PrecacheCacheKeyPlugin","_createClass","_ref","_this","precacheController","_classCallCheck","cacheKeyWillBeUsed","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","request","params","cacheKey","wrap","_callee$","_context","prev","next","_precacheController","getCacheKeyForURL","url","abrupt","Request","headers","stop","_x","apply","arguments"],"sources":["/Users/minjeongyeom/Projects/project-wildet/wildet/node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js"],"sourcesContent":["/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n    constructor({ precacheController }) {\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\n            // Params is type any, can't change right now.\n            /* eslint-disable */\n            const cacheKey = (params === null || params === void 0 ? void 0 : params.cacheKey) ||\n                this._precacheController.getCacheKeyForURL(request.url);\n            /* eslint-enable */\n            return cacheKey\n                ? new Request(cacheKey, { headers: request.headers })\n                : request;\n        };\n        this._precacheController = precacheController;\n    }\n}\nexport { PrecacheCacheKeyPlugin };\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAgB;AACvB;AACA;AACA;AACA;AACA;AACA;AALA,IAMMA,sBAAsB,gBAAAC,YAAA,CACxB,SAAAD,uBAAAE,IAAA,EAAoC;EAAA,IAAAC,KAAA;EAAA,IAAtBC,kBAAkB,GAAAF,IAAA,CAAlBE,kBAAkB;EAAAC,eAAA,OAAAL,sBAAA;EAC5B,IAAI,CAACM,kBAAkB;IAAA,IAAAC,KAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAAC,KAAA;MAAA,IAAAC,OAAA,EAAAC,MAAA,EAAAC,QAAA;MAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAASP,OAAO,GAAAD,KAAA,CAAPC,OAAO,EAAEC,MAAM,GAAAF,KAAA,CAANE,MAAM;YAC9C;YACA;YACMC,QAAQ,GAAG,CAACD,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACC,QAAQ,KAC7EZ,KAAI,CAACkB,mBAAmB,CAACC,iBAAiB,CAACT,OAAO,CAACU,GAAG,CAAC;YAC3D;YAAA,OAAAL,QAAA,CAAAM,MAAA,WACOT,QAAQ,GACT,IAAIU,OAAO,CAACV,QAAQ,EAAE;cAAEW,OAAO,EAAEb,OAAO,CAACa;YAAQ,CAAC,CAAC,GACnDb,OAAO;UAAA;UAAA;YAAA,OAAAK,QAAA,CAAAS,IAAA;QAAA;MAAA,GAAAhB,OAAA;IAAA,CAChB;IAAA,iBAAAiB,EAAA;MAAA,OAAArB,KAAA,CAAAsB,KAAA,OAAAC,SAAA;IAAA;EAAA;EACD,IAAI,CAACT,mBAAmB,GAAGjB,kBAAkB;AACjD,CAAC;AAEL,SAASJ,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}