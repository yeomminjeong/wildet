{"ast":null,"code":"var _jsxFileName = \"/Users/minjeongyeom/Projects/project-wildet/wildet/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { authService } from \"./api/firebase\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport AppRouter from \"./components/Router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //firebase 초기화\n  const [init, setInit] = useState(false);\n\n  //로그인 회원 확인\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const user = authService.currentUser;\n  useEffect(() => {\n    onAuthStateChanged(authService, user => {\n      if (user) {\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  console.log(user);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: init ? /*#__PURE__*/_jsxDEV(AppRouter, {\n      isLoggedIn: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }, this) : \"Initializing\"\n  }, void 0, false);\n}\n_s(App, \"ptuVdtUS6m3ICSoMd6VgFQrjPsU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","authService","onAuthStateChanged","AppRouter","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","init","setInit","isLoggedIn","setIsLoggedIn","user","currentUser","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/minjeongyeom/Projects/project-wildet/wildet/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { authService } from \"./api/firebase\";\nimport { onAuthStateChanged } from \"firebase/auth\";\n\nimport AppRouter from \"./components/Router\";\n\nfunction App() {\n  //firebase 초기화\n  const [init, setInit] = useState(false);\n\n  //로그인 회원 확인\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const user = authService.currentUser;\n\n  useEffect(() => {\n    onAuthStateChanged(authService, (user) => {\n      if (user) {\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  console.log(user);\n\n  return <>{init ? <AppRouter isLoggedIn={isLoggedIn} /> : \"Initializing\"}</>;\n}\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,kBAAkB,QAAQ,eAAe;AAElD,OAAOC,SAAS,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEvC;EACA,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMc,IAAI,GAAGb,WAAW,CAACc,WAAW;EAEpChB,SAAS,CAAC,MAAM;IACdG,kBAAkB,CAACD,WAAW,EAAGa,IAAI,IAAK;MACxC,IAAIA,IAAI,EAAE;QACRD,aAAa,CAAC,IAAI,CAAC;MACrB,CAAC,MAAM;QACLA,aAAa,CAAC,KAAK,CAAC;MACtB;MACAF,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAENK,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EAEjB,oBAAOT,OAAA,CAAAE,SAAA;IAAAW,QAAA,EAAGR,IAAI,gBAAGL,OAAA,CAACF,SAAS;MAACS,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,GAAG;EAAc,iBAAI;AAC7E;AAACb,EAAA,CAtBQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}