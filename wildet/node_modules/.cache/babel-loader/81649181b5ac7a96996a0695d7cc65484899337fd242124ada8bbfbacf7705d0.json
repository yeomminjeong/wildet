{"ast":null,"code":"import _toConsumableArray from \"/Users/minjeongyeom/Projects/project-wildet/wildet/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nvar logger = process.env.NODE_ENV === 'production' ? null : function () {\n  // Don't overwrite this value if it's already set.\n  // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n  if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n    self.__WB_DISABLE_DEV_LOGS = false;\n  }\n  var inGroup = false;\n  var methodToColorMap = {\n    debug: \"#7f8c8d\",\n    log: \"#2ecc71\",\n    warn: \"#f39c12\",\n    error: \"#c0392b\",\n    groupCollapsed: \"#3498db\",\n    groupEnd: null // No colored prefix on groupEnd\n  };\n\n  var print = function print(method, args) {\n    var _console2;\n    if (self.__WB_DISABLE_DEV_LOGS) {\n      return;\n    }\n    if (method === 'groupCollapsed') {\n      // Safari doesn't print all console.groupCollapsed() arguments:\n      // https://bugs.webkit.org/show_bug.cgi?id=182754\n      if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n        var _console;\n        (_console = console)[method].apply(_console, _toConsumableArray(args));\n        return;\n      }\n    }\n    var styles = [\"background: \".concat(methodToColorMap[method]), \"border-radius: 0.5em\", \"color: white\", \"font-weight: bold\", \"padding: 2px 0.5em\"];\n    // When in a group, the workbox prefix is not displayed.\n    var logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n    (_console2 = console)[method].apply(_console2, logPrefix.concat(_toConsumableArray(args)));\n    if (method === 'groupCollapsed') {\n      inGroup = true;\n    }\n    if (method === 'groupEnd') {\n      inGroup = false;\n    }\n  };\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  var api = {};\n  var loggerMethods = Object.keys(methodToColorMap);\n  var _loop = function _loop() {\n    var key = _loggerMethods[_i];\n    var method = key;\n    api[method] = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      print(method, args);\n    };\n  };\n  for (var _i = 0, _loggerMethods = loggerMethods; _i < _loggerMethods.length; _i++) {\n    _loop();\n  }\n  return api;\n}();\nexport { logger };","map":{"version":3,"names":["logger","process","env","NODE_ENV","self","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","_console2","test","navigator","userAgent","_console","console","apply","_toConsumableArray","styles","concat","logPrefix","join","api","loggerMethods","Object","keys","_loop","key","_loggerMethods","_i","_len","arguments","length","Array","_key"],"sources":["/Users/minjeongyeom/Projects/project-wildet/wildet/node_modules/workbox-core/_private/logger.js"],"sourcesContent":["/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production'\n    ? null\n    : (() => {\n        // Don't overwrite this value if it's already set.\n        // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n        if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n            self.__WB_DISABLE_DEV_LOGS = false;\n        }\n        let inGroup = false;\n        const methodToColorMap = {\n            debug: `#7f8c8d`,\n            log: `#2ecc71`,\n            warn: `#f39c12`,\n            error: `#c0392b`,\n            groupCollapsed: `#3498db`,\n            groupEnd: null, // No colored prefix on groupEnd\n        };\n        const print = function (method, args) {\n            if (self.__WB_DISABLE_DEV_LOGS) {\n                return;\n            }\n            if (method === 'groupCollapsed') {\n                // Safari doesn't print all console.groupCollapsed() arguments:\n                // https://bugs.webkit.org/show_bug.cgi?id=182754\n                if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                    console[method](...args);\n                    return;\n                }\n            }\n            const styles = [\n                `background: ${methodToColorMap[method]}`,\n                `border-radius: 0.5em`,\n                `color: white`,\n                `font-weight: bold`,\n                `padding: 2px 0.5em`,\n            ];\n            // When in a group, the workbox prefix is not displayed.\n            const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n            console[method](...logPrefix, ...args);\n            if (method === 'groupCollapsed') {\n                inGroup = true;\n            }\n            if (method === 'groupEnd') {\n                inGroup = false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const api = {};\n        const loggerMethods = Object.keys(methodToColorMap);\n        for (const key of loggerMethods) {\n            const method = key;\n            api[method] = (...args) => {\n                print(method, args);\n            };\n        }\n        return api;\n    })());\nexport { logger };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAgB;AACvB,IAAMA,MAAM,GAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAC/C,IAAI,GACH,YAAM;EACL;EACA;EACA,IAAI,EAAE,uBAAuB,IAAIC,IAAI,CAAC,EAAE;IACpCA,IAAI,CAACC,qBAAqB,GAAG,KAAK;EACtC;EACA,IAAIC,OAAO,GAAG,KAAK;EACnB,IAAMC,gBAAgB,GAAG;IACrBC,KAAK,WAAW;IAChBC,GAAG,WAAW;IACdC,IAAI,WAAW;IACfC,KAAK,WAAW;IAChBC,cAAc,WAAW;IACzBC,QAAQ,EAAE,IAAI,CAAE;EACpB,CAAC;;EACD,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAaC,MAAM,EAAEC,IAAI,EAAE;IAAA,IAAAC,SAAA;IAClC,IAAIb,IAAI,CAACC,qBAAqB,EAAE;MAC5B;IACJ;IACA,IAAIU,MAAM,KAAK,gBAAgB,EAAE;MAC7B;MACA;MACA,IAAI,gCAAgC,CAACG,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,EAAE;QAAA,IAAAC,QAAA;QAC5D,CAAAA,QAAA,GAAAC,OAAO,EAACP,MAAM,CAAC,CAAAQ,KAAA,CAAAF,QAAA,EAAAG,kBAAA,CAAIR,IAAI,EAAC;QACxB;MACJ;IACJ;IACA,IAAMS,MAAM,GAAG,gBAAAC,MAAA,CACInB,gBAAgB,CAACQ,MAAM,CAAC,qFAK1C;IACD;IACA,IAAMY,SAAS,GAAGrB,OAAO,GAAG,EAAE,GAAG,CAAC,WAAW,EAAEmB,MAAM,CAACG,IAAI,CAAC,GAAG,CAAC,CAAC;IAChE,CAAAX,SAAA,GAAAK,OAAO,EAACP,MAAM,CAAC,CAAAQ,KAAA,CAAAN,SAAA,EAAIU,SAAS,CAAAD,MAAA,CAAAF,kBAAA,CAAKR,IAAI,GAAC;IACtC,IAAID,MAAM,KAAK,gBAAgB,EAAE;MAC7BT,OAAO,GAAG,IAAI;IAClB;IACA,IAAIS,MAAM,KAAK,UAAU,EAAE;MACvBT,OAAO,GAAG,KAAK;IACnB;EACJ,CAAC;EACD;EACA,IAAMuB,GAAG,GAAG,CAAC,CAAC;EACd,IAAMC,aAAa,GAAGC,MAAM,CAACC,IAAI,CAACzB,gBAAgB,CAAC;EAAC,IAAA0B,KAAA,YAAAA,MAAA,EACnB;IAA5B,IAAMC,GAAG,GAAAC,cAAA,CAAAC,EAAA;IACV,IAAMrB,MAAM,GAAGmB,GAAG;IAClBL,GAAG,CAACd,MAAM,CAAC,GAAG,YAAa;MAAA,SAAAsB,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAATvB,IAAI,OAAAwB,KAAA,CAAAH,IAAA,GAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;QAAJzB,IAAI,CAAAyB,IAAA,IAAAH,SAAA,CAAAG,IAAA;MAAA;MAClB3B,KAAK,CAACC,MAAM,EAAEC,IAAI,CAAC;IACvB,CAAC;EACL,CAAC;EALD,SAAAoB,EAAA,MAAAD,cAAA,GAAkBL,aAAa,EAAAM,EAAA,GAAAD,cAAA,CAAAI,MAAA,EAAAH,EAAA;IAAAH,KAAA;EAAA;EAM/B,OAAOJ,GAAG;AACd,CAAC,EAAI;AACT,SAAS7B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}